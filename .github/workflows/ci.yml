---
name: ci

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-and-test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
            python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install pytest
          python -m pip install -r requirements-test.txt
        shell: bash
      - name: "Build"
        run: |
          if [[ `uname` == "Darwin" ]]
          then
            echo "build --macos_minimum_os=10.9" >> ${HOME}/.bazelrc
          fi
          set -xe
          python -VV
          bazel --version
          python setup.py sdist
          pip wheel --verbose --no-deps --no-clean dist/dm-tree*.tar.gz
          pip install dm_tree*.whl
        shell: bash
      - name: "Run tests"
        run: |
          set -xe
          # Change directory to avoid importing tree from repo root.
          mkdir tests && pushd tests
          python -m pytest -vv --pyargs tree
          popd
        shell: bash
      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.action == 'created') }}
        with:
          path: dm_tree*.whl
      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.action == 'created') }}
        with:
          path: dist/dm-tree*.tar.gz
  build-aarch64:
    name: "Python ${{ matrix.pyver }} on aarch64"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - uses: "actions/checkout@v2"
    - name: "Build wheel"
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
          source .env/bin/activate && \
          echo "installing dependencies" && \
          python -m pip install --upgrade pip setuptools wheel && \
          python -m pip install pytest && \
          python -m pip install -r requirements-test.txt && \
          python -VV && \
          echo "installing bazel" && \
          yum -y install wget && \
          wget -O "bazel-linux-arm64" "https://github.com/bazelbuild/bazel/releases/download/4.1.0/bazel-4.1.0-linux-arm64" && \
          chmod +x bazel-linux-arm64 && \
          mv bazel-linux-arm64 /usr/bin/bazel && \
          python setup.py sdist && \
          pip wheel --verbose --no-deps --no-clean dist/dm-tree*.tar.gz && \
          pip install dm_tree*.whl && \
          mkdir tests && pushd tests && \
          python -m pytest -vv --pyargs tree && \
          popd && \
          deactivate'
    - uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.action == 'created') }}
      with:
        path: dm_tree*.whl
